# What is this?

This is an attempt at reindexing the discogs snapshots [1] in a way that yields fast answers to questions like:

- "what were all the tracks produced by artist X?"
- "list all the labels for which artist X has had a release"
- "give me all the artists that have released on label Y"
- "starting for artist X, give me all the labels they've released on. Give me all the artists that have had releases on such labels"
- and so on.

# How does it work?

The public discogs snaphots [1] are stored in gzipped xml, which is very slow to parse/query. Moreover, the records in this database carry a lot of additional content that isn't particularly useful for answering the questions above. Rather than query these snapshot directly, I parse them into a shorthand format that hosts only critical information like the artist/label/release id, the name, and the relationships to other elements in the database. This is the responsibility of the tokenizer: parse the gzipped discogs snapshots into shorthand .tok files that are human-readable, easy for a machine to parse, and hosts only the core bits of the discogs snapshots.

Next, I run a parser (prepare.py) to read these .tok files and construct a set of btrees (via sqlite) that index across any meaningful relationship you can think of: artist to label, artist to artist, label to artist, label to release, release to label etc. With this you can run any standard sql query against this dataset and get answers to questions like those above very quickly. I have set of example queries in explore.py. In particular, the walk() method does a recusive walk against the database to say something like: "this artist had released on these labels. For each of these labels, the label had releases from these artists. Each of those artists had releases on these other labels" and so on.

# Can you give an example of it working?

Here a sample run of the walk() (starting from artist Grant Dell https://www.discogs.com/artist/15725-Grant-Dell):

01:07:57 mllilek mllilek-debian2022 ~/workspace/discogsdb $ ./explore.py 
(15725, None, None)
 (32, 'Worship Recordings', 'https://www.discogs.com/label/32')
  (63, 'Solomonic Sound', 'https://www.discogs.com/artist/63')
  (443, 'Rick Preston', 'https://www.discogs.com/artist/443')
  (9789, '(E)Motion Detectors', 'https://www.discogs.com/artist/9789')
  (14363, 'Nectar', 'https://www.discogs.com/artist/14363')
  (14364, 'Divine Conception', 'https://www.discogs.com/artist/14364')
  ...
 (81, 'Mother Tongue', 'https://www.discogs.com/label/81')
  (2508, 'Ten Bar', 'https://www.discogs.com/artist/2508')
  (73701, 'Adam Collins', 'https://www.discogs.com/artist/73701')
  (127062, 'DJ Hush', 'https://www.discogs.com/artist/127062')
  (161359, 'Sista Stroke', 'https://www.discogs.com/artist/161359')
  ...
 (463, 'Maya', 'https://www.discogs.com/label/463')
  (1471, 'Master D', 'https://www.discogs.com/artist/1471')
  (3568, 'Buck', 'https://www.discogs.com/artist/3568')
  (7627, 'DJ Buck', 'https://www.discogs.com/artist/7627')
  (8227, 'Joeski & Chus', 'https://www.discogs.com/artist/8227')
  (17006, 'J & S Productions', 'https://www.discogs.com/artist/17006')
  ...
 (876, 'Wildlife', 'https://www.discogs.com/label/876')
 ...

# Dependencies

- yxml
- sqlite

[1] https://discogs-data-dumps.s3.us-west-2.amazonaws.com/index.html
